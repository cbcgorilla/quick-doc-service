buildscript {
    ext.kotlin_version = '1.2.50'
    ext {
        springBootVersion = '2.0.3.RELEASE'
        swagger_version = '2.8.0'
        swagger_bootstrap_version = '1.7.2'
        spring_kafka_version = '2.1.6.RELEASE'
        junit_version = '4.12'
        junit_jupiter_version = '5.2.0'
        junit_vintage_version = '5.2.0'
        junit_platform_version = '1.2.0'
        jodconverterVersion = '4.2.0'
        libreOfficeVersion = '5.4.2'
        gson_version = '2.8.5'
        aspect_version = '1.9.1'
        cglib_version = '3.2.6'
    }
    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/snapshot' }
        maven { url 'https://repo.spring.io/milestone' }
        maven { url 'http://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
        classpath("io.spring.gradle:propdeps-plugin:0.0.10.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'eclipse'
apply plugin: 'propdeps'
apply plugin: 'propdeps-maven'
apply plugin: 'propdeps-idea'
apply plugin: 'propdeps-eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'cn.mxleader.quickdoc'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}


dependencies {
    optional("org.springframework.boot:spring-boot-configuration-processor")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-starter-data-mongodb-reactive")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-web")
    //compile("org.springframework.boot:spring-boot-starter-webflux")
    //compile("io.springfox:springfox-swagger2:$swagger_version")
    //compile("io.springfox:springfox-swagger-ui:$swagger_version")
    //compile("com.github.xiaoymin:swagger-bootstrap-ui:$swagger_bootstrap_version")
    compile("org.springframework.kafka:spring-kafka:$spring_kafka_version")
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version")
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version")
    compile("org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version")
    compile("org.jetbrains.kotlin:kotlin-reflect:$kotlin_version")
    compile("com.fasterxml.jackson.module:jackson-module-kotlin")
    //compile("commons-fileupload:commons-fileupload:1.3.3")
    //compile("commons-io:commons-io:2.6")
    compile("org.aspectj:aspectjrt:$aspect_version")
    compile("org.aspectj:aspectjweaver:$aspect_version")
    compile("cglib:cglib:$cglib_version")

    // Office文档预览功能依赖包
    compile('org.springframework.boot:spring-boot-starter')
    compile("org.jodconverter:jodconverter-core:$jodconverterVersion")
    compile("org.jodconverter:jodconverter-local:$jodconverterVersion")
    compile("org.libreoffice:juh:$libreOfficeVersion")
    compile("org.libreoffice:jurt:$libreOfficeVersion")
    compile("org.libreoffice:ridl:$libreOfficeVersion")
    compile("org.libreoffice:unoil:$libreOfficeVersion")
    compile("com.google.code.gson:gson:$gson_version")

    testCompile("io.projectreactor:reactor-test")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.springframework.security:spring-security-test")
    testCompile("junit:junit:$junit_version")
    testCompile("org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version")
    testCompile("org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version")
    testCompile("org.junit.platform:junit-platform-runner:$junit_platform_version")
    testCompile("org.junit.platform:junit-platform-launcher:$junit_platform_version")
    testCompile("org.junit.vintage:junit-vintage-engine:$junit_vintage_version")
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
